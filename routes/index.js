var express = require('express');var router = express.Router();var Datastore = require('nedb');var responder = require('../lib/httpRespond');var wrapper = require('../lib/wrapper.js');var root = "http://localhost:3000"var db = {};// Connect to an NeDB databasedb.movies = new Datastore({filename: 'db/movies', autoload: true});// add an indexdb.movies.ensureIndex({ fieldName: "title", unique: true});// Catch-all route to set global valuesrouter.use(function (req, res, next){    res.type('application/json');    res.locals.wrapper = wrapper.create({start: new Date() });    next();});// Routesrouter.get('/', function(req, res, next) {  res.send("Api working!");});router.get('/movies', function (req, res){    db.movies.find({}, function(err, results){        if (err)        {            res.json(500, {error:err});            return;        }        res.json(200, res.locals.wrapper(results.map(function(movie){            movie.link = {self: root + '/movies/' + movie._id};            return movie;        }),{next: root + '/movies?page=2'}));    });});router.post('/movies', function(req, res){    if (!req.body.title)    {        res.status(400);        res.json(400, {error: { message: "A title is required to create a new movie"}});        return;    }    db.movies.insert({ title: req.body.title }, function(err, created){        if (err)        {            res.json(500, {error: err});            return;        }        res.set('Location', root + '/movies/' + created._id);        res.json(201, created);    });});router.get('/movies/:id', function (req, res) {    db.movies.findOne({ _id: req.params.id }, function(err, result){        if (err)        {            res.json(500, {error: err});            return;        }        if (!result)        {            res.json(404, {error:{message: "We did not find a movie with id: " + req.params.id}});            return;        }        res.json(200, res.locals.wrapper(result, {self: root + '/movies/' + req.params.id}));    });});router.put('/movies/:id', function (req, res){    db.movies.update({ _id: req.params.id }, req.body, function (err, num) {        res.locals.respond(err, { success: num + " records updated" });    });});router.delete('/movies/:id', function(req, res){    db.movies.remove({ _id: req.params.id }, function(err, num){        if (err)        {            res.json(500, {error: err});            return;        }        if (num === 0)        {            res.json(404, {error:{message: "We did not find a movie with id: " + req.params.id}});            return;        }        res.set('Link', root + '/movies;rel="collections"');        res.send(204);    });});module.exports = router;