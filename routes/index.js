var express = require('express');var router = express.Router();var Datastore = require('nedb');var responderSetup = function(res){    return function (err, results)    {        if (err)        {            res.send(JSON.stringify(err));        }        else        {            res.send(JSON.stringify(results))        }    }};var db = {};// Connect to an NeDB databasedb.movies = new Datastore({filename: 'db/movies', autoload: true});// Routesrouter.get('/', function(req, res, next) {  res.send("Api working!");}) // interaction with a collection of movies    .post('/movies', function(req, res){        var body = req.body;        var respond = responderSetup(res);        res.set('Content-type', 'application/json');        switch (body.action)        {            case "viewList":                db.movies.find({}, respond);                break;            case "addNew":                db.movies.insert({ title: body.title}, respond);                break;            default:                respond({error: "No action given in request"});        }    })    .post('/movies/:id', function(req, res){        var body = req.body;        var respond = responderSetup(res);        res.set('Content-type', 'application/json');        switch (body.action)        {            case "view":                db.movies.findOne({_id: req.params.id}, respond);                break;            case "rate":                db.movies.update({_id: req.params.id}, { $set: { rating: body.rating } }, function(err, num){                    respond(err, {success: num + " records updated"});                });                break;            case "addNew":                db.movies.insert({ title: body.title}, respond);                break;            default:                respond({error: "No action given in request"});        }    })    .post('/rpc', function(req, res){        var body = req.body;        var respond = responderSetup(res);        res.set('Content-type', 'application/json');        switch (body.action)        {            case "getMovies":                db.movies.find({}, respond);                break;            case "addMovie":                db.movies.insert({ title: body.title}, respond);                break;            case "rateMovie":                db.movies.update({title: body.title}, { $set: { rating: body.rating } }, function(err, num){                    respond(err, {success: num + " records updated"});                });                break;            default:                respond("No action given");        }});module.exports = router;